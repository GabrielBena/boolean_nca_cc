hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params:
      pool.gate_knockout.active: 'True'
      pool.soft_lut_damage.active: 'False'
      model: gnn,self_attention
      pool.gate_knockout.fraction: 0.01,0.05
      pool.gate_knockout.interval: 32,64
      pool.gate_knockout.damage_prob: '0.15'
      training.n_message_steps: 5,10
      training.learning_rate: 0.001,0.0003
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra: []
    task: []
  job:
    name: train
    chdir: null
    override_dirname: ''
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /home/marcello/workspace/boolean_nca_cc
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/marcello/workspace/boolean_nca_cc/configs
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      model: gnn
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
model:
  _target_: boolean_nca_cc.models.CircuitGNN
  type: gnn
  hidden_dim: 128
  message_passing: true
  node_mlp_features:
  - 128
  - 128
  edge_mlp_features:
  - 128
  - 128
  use_attention: true
seed: 0
test_seed: 42
wandb:
  enabled: true
  project: boolean-nca-cc
  entity: m2snn
  run_name: null
  tags:
  - boolean-circuit
  - nca
  - meta-learning
circuit:
  task: binary_multiply
  input_bits: 8
  output_bits: 8
  arity: 4
  num_layers: 5
  layer_sizes: null
training:
  learning_rate: 0.003
  weight_decay: 1.0e-05
  epochs: null
  epochs_power_of_2: 10
  loss_type: l4
  wiring_mode: fixed
  meta_batch_size: 32
  n_message_steps: 10
  lr_scheduler: linear_warmup
pool:
  size: 1024
  reset_fraction: 0.05
  reset_interval: 32
  reset_strategy: combined
  combined_weights:
  - 0.5
  - 0.5
  gate_knockout:
    active: true
    fraction: 0.01
    interval: 64
    strategy: uniform
    damage_prob: 0.1
    combined_weights:
    - 0.5
    - 0.5
  soft_lut_damage:
    active: false
    fraction: 0.01
    interval: 64
    strategy: uniform
    damage_prob: 0.1
    combined_weights:
    - 0.5
    - 0.5
backprop:
  enabled: false
  epochs: 100
  learning_rate: 1
  weight_decay: 0.1
  optimizer: adamw
  beta1: 0.8
  beta2: 0.8
eval:
  inner_steps: 100
checkpoint:
  enabled: true
  interval: 1024
  save_best: true
  best_metric: hard_accuracy
  save_stable_states: true
logging:
  log_interval: 10
  level: INFO
