# Main Hydra configuration file for Boolean NCA training

# Default parameters for experiment
defaults:
  - model: self_attention  # Default model (gnn or self_attention)
  - _self_  # For self-overrides

# Random seed for reproducibility
seed: 0
test_seed: 42

# Output configuration
output:
  dir: null  # Output directory (null means use current working directory)

# Wandb configuration
wandb:
  enabled: true
  project: "boolean-nca-cc"
  entity: marcello-barylli-growai  # Your wandb username or team name
  run_name: null  # Auto-generated if null
  tags: ["boolean-circuit", "nca", "meta-learning"]
  group: null

# Circuit configuration
circuit:
  task: "binary_multiply"
  input_bits: 4
  output_bits: 4
  arity: 2
  num_layers: 3
  layer_sizes: null  # Auto-generate if null 
  circuit_hidden_dim: 32

# Training parameters
training:
  # INNER LOOP
  n_message_steps: 5  # Number of message passing steps per training iteration
  # LOSS TYPE
  loss_type: "l4"  # Options: "l4", "l2", or "bce"
  # BATCH SIZE
  meta_batch_size: 64
  # OPTIMIZATION
  learning_rate: 2e-4
  weight_decay: 1e-5
  # LEARNING RATE SCHEDULER
  lr_scheduler: "linear_warmup"  # Options: "constant", "exponential", "cosine", "linear_warmup"
  lr_scheduler_params:
    warmup_steps_factor: 50
    lr_warmup_start: 1e-6
    exponent: 1
    alpha: 1e-1 # final lr = 1% of initial lr
  # NUMBER OF EPOCHS
  epochs: 4096 # 512
  # USE SCAN
  use_scan: false

pool:
  size: 1024
  reset_fraction: 0.15
  reset_interval: 128
  reset_strategy: "combined"  # Options: "uniform", "steps_biased", "loss_biased", "combined"
  combined_weights: [0.5, 0.5] # Weights for [loss, steps] in combined reset strategy

  # Sample-based damage (applied post-step, independent of resets)
  damage_pool_enabled: false
  damage_pool_interval: 0
  damage_pool_fraction: 0.0
  damage_strategy: "uniform"
  damage_combined_weights: [0.5, 0.5]
  # Number of gates to knock out when generating fresh patterns (ignored if vocabulary is used)
  damage_prob: 0.0
  # Damage-specific vocabulary size (decoupled from legacy persistent_knockout)
  damage_knockout_diversity: 0

  # # Persistent structural knockout (injected periodically)
  # persistent_knockout:
  #   fraction: 0 # 
  #   damage_prob: 0 
  #   knockout_diversity: 0  # Vocabulary size for knockout patterns

eval:
  # Periodic evaluation parameters
  periodic_eval_enabled: false
  periodic_eval_inner_steps: 100
  periodic_eval_interval: 128
  periodic_eval_test_seed: 42
  periodic_eval_log_stepwise: false
  periodic_eval_batch_size: ${pool.damage_knockout_diversity}  # Batch size for knockout evaluation (should match knockout_diversity)
  
  # Knockout evaluation
  knockout_eval:
    enabled: true
    damage_prob: ${pool.damage_prob}
  
  # Final BP vs SA comparison evaluation
  final_eval_enabled: true
  final_eval_inner_steps: ${eval.periodic_eval_inner_steps}
  final_eval_seed: 999

# Logging configuration
logging:
  log_interval: 16  # Log metrics every N epochs
  level: "INFO" 

# Backpropagation baseline configuration
backprop:
  enabled: true
  epochs: 200 
  learning_rate: 1
  weight_decay: 1e-1
  optimizer: "adamw"
  beta1: 0.8
  beta2: 0.8
  
  # Knockout vocabulary configuration for backprop training
  knockout_vocabulary:
    enabled: true  # Set to true to enable knockout patterns in backprop
    size: ${pool.persistent_knockout.knockout_diversity}  # Number of knockout patterns to test
    damage_prob: ${pool.persistent_knockout.damage_prob}  # Number of gates to knock out per pattern 